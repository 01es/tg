package ua.com.fielden.platform.entity.query.tokens;

public enum TokenCategory {
    PROP, VAL, PARAM, EXPR, EXPR_TOKENS, EQUERY_TOKENS, //
    //SINGLE_OPERAND, //
    ANY_OF_PROPS, ANY_OF_VALUES, ANY_OF_PARAMS, ANY_OF_EXPR_TOKENS, ANY_OF_EQUERY_TOKENS,
    ALL_OF_PROPS, ALL_OF_VALUES, ALL_OF_PARAMS, ALL_OF_EXPR_TOKENS, ALL_OF_EQUERY_TOKENS,
    SET_OF_PROPS, SET_OF_VALUES, SET_OF_PARAMS, SET_OF_EXPR_TOKENS,

    COMPARISON_OPERATOR, NULL_OPERATOR, EXISTS_OPERATOR, LIKE_OPERATOR, ILIKE_OPERATOR, IN_OPERATOR, ANY_OPERATOR, ALL_OPERATOR,
    //TODO replace ANY_OPERATOR, ALL_OPERATOR with QUANTIFIED_OPERATOR and use SqlTokens.ALL/ANY in addition
    LOGICAL_OPERATOR,
    ARITHMETICAL_OPERATOR, //

    COMPARISON_TEST, NULL_TEST, EXISTENCE_TEST, LIKE_TEST, SET_TEST, QUANTIFIED_TEST, GROUPED_CONDITIONS, CONDITIONS, //

    BEGIN_EXPR, END_EXPR, BEGIN_COND, END_COND,
    FUNCTIONS,

    SORT_ORDER,

    AS_ALIAS,
    ENTITY_ALIAS,
    FUNCTION, COLLECTIONAL_FUNCTION,
    QUERY_TOKEN,
    QRY_SOURCE_ALIAS,
    ENTITY_TYPE_AS_QRY_SOURCE,
    //QRY_MODEL_AS_QRY_SOURCE,
    QRY_MODELS_AS_QRY_SOURCE,
    QRY_SOURCES, QRY_SOURCE, QRY_COMPOUND_SOURCE,

    COMPOUND_CONDITION, FUNCTION_MODEL, ON, INNER_JOIN, LEFT_JOIN,
    QRY_YIELD, QRY_YIELDS, QRY_GROUPS, QRY_GROUP
    ;
}
